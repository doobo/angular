 1、——遮盖参简单指令封装
    /*<div sf-cover cover="coverAttr" ></div>
        <button class="fl" ng-click="coverAttr.open()">Cover Open</button>*/
    /*<div sf-cover cover="coverAttr" ></div>
    $scope.coverAttr = {
        text: '全局隐藏测试',
        isShow: false, isShow: true,
        callback: function (ele) {//点击遮盖层的回调函数
            console.log(ele);
            $scope.coverAttr.close();//关闭遮盖参
        }
    };*/
    /* <div sf-cover cover="coverAttr" ></div>
    $scope.btn_click = function () {
        $scope.coverAttr.open();
    }*/
    .directive('sfCover',[function(){
        return {
            restrict:'EA',
            replace:true,
            template: '<div style="background:rgba(0,0,0,0.5);\
                position:fixed;left:0px;top:0px;z-index:999;width:100%;height:100%;">\
                <div style="color:#fff;font-size:16px;position:absolute;top:30%;left:45%;">\
                <i class="fa fa-spinner fa-pulse fa-fw margin-bottom"></i>{{cover.text}}\
                </div></div>',
            scope: {
                cover: '=',
            },
            link:function(scope,element,attr,reController){
                scope.cover = scope.cover || {};
                if(!!scope.cover.isShow){
                    element.css("display","inline");
                }else{
                    element.css("display","none");
                }
                //关闭遮盖模块
                scope.cover.close = function () {
                    element.css("display","none");
                };
                //打开遮盖模块
                scope.cover.open = function () {
                    element.css("display","inline");
                }
                //添加遮盖参的点击回调函数
                element.on('click',function () {
                    if(typeof scope.cover.callback === "function"){
                        scope.cover.callback(element);
                    }
                });
            }
        };
    }])